# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Golang with cache
      uses: magnetikonline/action-golang-cache@v4
      with:
        go-version-file: go.mod

    - name: Build
      run: go build -o /usr/local/bin/app -v .

    - name: Test
      run: go test -v ./...

    - name: Password files
      env:
          DB_PWD: ${{ secrets.DB_PASSWORD }}
          ADMIN_DB_PWD: ${{ secrets.ADMIN_DB_PASSWORD }}
      run: |
        echo $DB_PWD > ./config/pg_password.txt
        echo $ADMIN_DB_PWD > ./config/admin_password.txt
        ls ./config

    - name: Docker Layer Caching2
      uses: jpribyl/action-docker-layer-caching@v0.1.0

    - name: DB docker
      run: |
        docker compose -f ./docker-compose.dev.yml -p webapp up --build -d
        docker ps

    - name: Run app
      run: |
        export DB_CONTAINER_NAME=$(docker ps --format "{{.Names}}" | grep db)
        echo "DB_CONTAINER_NAME: $DB_CONTAINER_NAME"
        ./config/wait-pg.sh
        ./config/endpoint.sh
      env:
        DB_HOST: "0.0.0.0"
        DB_PORT: 8088

    - name: E2E test
      run: go run ./e2e -t 180
