# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Golang with cache
      uses: magnetikonline/action-golang-cache@v4
      with:
        go-version-file: go.mod

    - name: ENV vars
      env:
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          USER_DEFAULT_PASSWORD: ${{ secrets.USER_DEFAULT_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DOMAIN_NAME: "localhost"
          APP_LOCAL_HOST: "172.17.0.1"
          APP_PORT: ${{ vars.APP_PORT }}
          APP_OUTER_PORT: ${{ vars.APP_OUTER_PORT }}
          NGINX_PORT: ${{ vars.APP_OUTER_PORT }}
          NGINX_SSL_PORT: "0"
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          CSRF_SECRET: ${{ secrets.CSRF_SECRET }}
          REDIS_HOST: "localhost"
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_USER: ${{ secrets.REDIS_USER }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDISCLI_AUTH: ${{ secrets.REDISCLI_AUTH }}
      run: ./scripts/pre_test.sh

    - run: docker compose --env-file ./.env.testing -f ./docker-compose.dev.yml pull

    - name: Docker Layer Caching2
      uses: jpribyl/action-docker-layer-caching@v0.1.0
      continue-on-error: true

    - name: Run docker
      run: |
        docker compose --env-file ./.env.testing -f ./docker-compose.dev.yml up -d
        docker ps
        # docker exec local-redis cat /usr/local/etc/redis/users.acl

    - name: Build
      run: CGO_ENABLED=0 GOOS=linux go build -o /usr/local/bin/app -v .

    - name: Test
      run: go test -v ./...

    - name: Run app
      run: TEST=1 app &

    - name: E2E test
      run: go run ./e2e -t 180
