version: "3.8"
services:
  webapp:
    image: kholinchen/dproject:latest
    container_name: "webapp-app-1"
    restart: always
    environment:
      DB_CONTAINER_NAME: "webapp-db-1"
      DB_HOST: "db"
      DB_PORT: 5432
      # DOMAIN_NAME: $DOMAIN_NAME
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER
      ADMIN_PASSWORD: $ADMIN_PASSWORD
      ADMIN_EMAIL: $ADMIN_EMAIL
      USER_DEFAULT_PASSWORD: $USER_DEFAULT_PASSWORD
      APP_PORT: $APP_PORT
      APP_OUTER_PORT: $APP_OUTER_PORT
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
  db:
    image: postgres:15.4
    container_name: "local-webapp-db"
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./config/db/initdb:/docker-entrypoint-initdb.d:ro
      - ./config/db:/tmp/data:ro
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=$PG_PASSWORD
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - ADMIN_PASSWORD=$ADMIN_PASSWORD
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
    image: nginx:1.25.2-alpine
    container_name: "local-nginx"
    restart: always
    environment:
      - APP_LOCAL_HOST=webapp
      - APP_PORT=$APP_PORT
      # - DOMAIN_NAME=$DOMAIN_NAME
      - SECOND_LEVEL_DOMAIN_NAME=$SECOND_LEVEL_DOMAIN_NAME
    volumes:
      - ./static:/data/static
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/templates/webapp.conf.template:/etc/nginx/templates/webapp.conf.template:ro
      - ./nginx/logs:/etc/nginx/logs
      # - ./nginx/certbot/conf:/etc/letsencrypt
      # - ./nginx/certbot/www:/var/www/certbot
      # - ./nginx/40-reload-cron.sh:/docker-entrypoint.d/40-reload-cron.sh
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - webapp
  # certbot:
  #   image: certbot/certbot
  #   container_name: "local-certbot"
  #   restart: always
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   volumes:
  #     - ./nginx/certbot/conf:/etc/letsencrypt
  #     - ./nginx/certbot/www:/var/www/certbot

volumes:
  db-data:
